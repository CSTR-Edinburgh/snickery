#openfst_bindir = '/afs/inf.ed.ac.uk/user/o/owatts/sim2/oliver/tool/bin/'
## unused?


## ----------- training data locations ---------
vctk_speaker_code = 'p298'

## outputs will be put in subdirectories under here:
workdir = '/afs/inf.ed.ac.uk/user/o/owatts/sim2/oliver/hybrid_work/IS2018_exps/voices/vctk02_' + vctk_speaker_code

### 48k, mono, 16-bit wav-headered audio:
#wav_datadir = '/afs/inf.ed.ac.uk/group/cstr/projects/simple4all_2/oliver/data/nick/wav'

data = '/afs/inf.ed.ac.uk/group/cstr/projects/simple4all_2/oliver/hybrid_work/data/VCTK_softlinks/VCTK_' + vctk_speaker_code

## original train data features, for join cost:
join_datadirs = [data + '/low/']

### Reaper pitchmarks:
pm_datadir = data + '/pm/'

## list of files to train on can optionally also be given in a list of basenames, for extra control:
## train_list = '' 

label_datadir = ''

## faked (oracle) target:    
target_datadirs = join_datadirs

store_full_magphase = False 
store_full_magphase_sep_files = True
full_magphase_dir = data + '/high/'


## ----------- synthesis data locations ---------


test_data_dirs = ['/afs/inf.ed.ac.uk/group/cstr/projects/simple4all_2/oliver/hybrid_work/data/nick_test_sets/magphase/low/']

test_lab_dir = label_datadir
test_patterns = ['hvd']



## ------- data -----


## this can be an int to take the first n utterances, else a string to match
## the names of some utterances. 0 means take all.
n_train_utts = 0

## labels
#lab_extension = 'lab'

## HTS style:
#quinphone_regex = '([^~]+)~([^-]+)-([^\+]+)\+([^\=]+)\=([^:]+)'
## Ossian style
#quinphone_regex = '/1:([^/]+)/2:([^/]+)/3:([^/]+)/4:([^/]+)/5:([^/]+)' 





datadims = {'lf0':1, 'mag': 60, 'real': 45, 'imag': 45, 'mag_cc': 60, 'real_cc': 45, 'imag_cc': 45}
stream_list_join = ['mag', 'real', 'imag', 'lf0']
datadims_join = datadims

stream_list_target = ['mag', 'lf0'] 
datadims_target = datadims

frameshift_ms = 5
sample_rate = 48000


## A peculiarity of the Blizzard regenerated data is that the end silences are stripped, replace them with zeros: 
untrim_silence_join_speech = False
untrim_silence_target_speech = False

truncate_join_streams = [-1, -1, -1]
truncate_target_streams = [-1, -1] 



### ----- standardisation and weighting -------


## First, data is standardised by the "train" script (per stream rather than 
## per coefficient) and stored to disk. 

standardise_target_data = True
standardise_join_data = True 
                 
## The "synth" script loads the standardised data and applies the following weights. 
## These weights are applied to the data before distances are computed, which is 
## equivalent to weighting the differences before squaring, but slightly more efficient
## and allows us to use KD tree implementations with only simple Euclidean distance.
## The weights used here would be squared if they were to be applied to the squared 
## difference term (as in the more standard formulation of weighted Euclidean distance)
## with the same effect.

weight_target_data = True
weight_join_data = True

### --- stream-level weights

target_stream_weights = [1.0 / float(len(stream_list_target))]  *  len(stream_list_target)
join_stream_weights = [1.0 / float(len(stream_list_join))]  *  len(stream_list_join)


target_representation = 'epoch' 



## -------- synthesis --------

greedy_search = True 

#use_hdf_magphase = data + '/nick_01.h5'
#use_hdf_magphase = '/Users/owatts/proj/hybrid/local_data_dumps/nick_01.h5'


preload_all_magphase_utts = False 
hold_waves_in_memory = False # True


n_test_utts = 19

debug_with_adjacent_frames = False

search_epsilon = 10.0 # 'Return approximate nearest neighbors; the kth returned value is guaranteed to be no further than (1+eps) times the distance to the real kth nearest neighbor.'

multiepoch=6
magphase_overlap=2
last_frame_as_target=False
magphase_use_target_f0=True

## overall scaling factor
join_cost_weight = 0.2









## Print some info for debugging synthesis:
get_selection_info = False




## ------- unused ? -----


preselection_method = 'quinphone' # 'acoustic' #

## Waveforms are overlapped-and-added using a hanning window of length taper_length*2 samples
taper_length = 50

n_candidates = 30 # 50 # 10 

forbid_repetition = True
forbid_regression = 5

synth_smooth = False # True

join_cost_type = 'natural2' 






kdt_implementation = 'stashable'
target_metric = 'euclidean' 
                                       
                   


tune_patterns = ['mrt']   ## dummy value
tune_data_dirs = test_data_dirs 

tune_lab_dir = ''
n_tune_utts = 0                   