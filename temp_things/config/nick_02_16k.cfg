#openfst_bindir = '/afs/inf.ed.ac.uk/user/o/owatts/sim2/oliver/tool/bin/'
## unused?


## ----------- training data locations ---------


## outputs will be put in subdirectories under here:
workdir = '/afs/inf.ed.ac.uk/group/cstr/projects/simple4all_2/oliver/hybrid_work/nick_work_02_16k/'

### 48k, mono, 16-bit wav-headered audio:
wav_datadir = '/afs/inf.ed.ac.uk/group/cstr/projects/simple4all_2/oliver/wavepred_work/data/wav'

data = '/afs/inf.ed.ac.uk/group/cstr/projects/simple4all_2/oliver/hybrid_work/nick_data_02_16k/'

## original train data features, for join cost:
join_datadirs = [data + '/low/']

### Reaper pitchmarks:
pm_datadir = data + '/pm/'

## list of files to train on can optionally also be given in a list of basenames, for extra control:
#train_list = data + 'trainlist.txt'

label_datadir = ''

## faked (oracle) target:    
target_datadirs = join_datadirs

store_full_magphase = False 
store_full_magphase_sep_files = True
full_magphase_dir = data + '/high/'


## ----------- synthesis data locations ---------


test_data_dirs = target_datadirs
test_lab_dir = label_datadir
test_patterns = ['hvd']

tune_patterns = ['herald_98', 'herald_99'] 
tune_data_dirs = test_data_dirs 

tune_lab_dir = ''
n_tune_utts = 0


## ------- data -----


## this can be an int to take the first n utterances, else a string to match
## the names of some utterances. 0 means take all.
n_train_utts = 1000 # 100

## labels
#lab_extension = 'lab'

## HTS style:
#quinphone_regex = '([^~]+)~([^-]+)-([^\+]+)\+([^\=]+)\=([^:]+)'
## Ossian style
#quinphone_regex = '/1:([^/]+)/2:([^/]+)/3:([^/]+)/4:([^/]+)/5:([^/]+)' 





datadims = {'lf0':1, 'mag': 60, 'real': 45, 'imag': 45, 'formfreq': 4, 'mgc': 60, 'f0': 1}

stream_list_join = ['mag', 'real', 'imag']
datadims_join = datadims

stream_list_target = ['mag', 'lf0'] 
datadims_target = datadims

frameshift_ms = 5
sample_rate = 16000


## A peculiarity of the Blizzard regenerated data is that the end silences are stripped, replace them with zeros: 
untrim_silence_join_speech = False
untrim_silence_target_speech = False

truncate_join_streams = [-1, -1, -1]
truncate_target_streams = [-1, -1] 



### ----- standardisation and weighting -------


## First, data is standardised by the "train" script (per stream rather than 
## per coefficient) and stored to disk. 

standardise_target_data = True
standardise_join_data = True 
                 
## The "synth" script loads the standardised data and applies the following weights. 
## These weights are applied to the data before distances are computed, which is 
## equivalent to weighting the differences before squaring, but slightly more efficient
## and allows us to use KD tree implementations with only simple Euclidean distance.
## The weights used here would be squared if they were to be applied to the squared 
## difference term (as in the more standard formulation of weighted Euclidean distance)
## with the same effect.

weight_target_data = True
weight_join_data = True

### --- stream-level weights

target_stream_weights = [ 1.0,1.0]
join_stream_weights = [0.2]*3 # [0.2,0.2,0.2] # [0.3, 0.7, 0.7] 


kdt_implementation = 'stashable'
target_metric = 'euclidean' 
                                       
                   

target_representation = 'epoch' 


## -------- synthesis --------

n_test_utts = 1

debug_with_adjacent_frames = False

#multiple_search_trees = 1
#cluster_data_on_npoints = 50000

search_epsilon = 10.0 # 'Return approximate nearest neighbors; the kth returned value is guaranteed to be no further than (1+eps) times the distance to the real kth nearest neighbor.'

multiepoch=4
magphase_overlap=2
last_frame_as_target=False
magphase_use_target_f0=True

hold_waves_in_memory = False # True

n_candidates = 30 # 50 # 10 

forbid_repetition = True
forbid_regression = 5

synth_smooth = False # True

join_cost_type = 'natural2' 

## overall scaling factor
join_cost_weight = 1.0

greedy_search = True 
preselection_method = 'quinphone' # 'acoustic' #

## Waveforms are overlapped-and-added using a hanning window of length taper_length*2 samples
taper_length = 50

## Print some info for debugging synthesis:
get_selection_info = True




